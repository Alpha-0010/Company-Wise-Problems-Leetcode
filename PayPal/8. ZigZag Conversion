// Special Problem.
// In this probelem, we will maintain 2 variables row and down. If the row number is 0 then we will make down=true which means we should go down and once we reach at the end of the row .i.e. row=numRows-1 we will make down=false which means we need to go up now. Also, check if down=true push the curr. char.(s[i]) into str[row] and since down=true move down(row++) else if down=false push the curr. char.(s[i]) at str[row] and move up row--. Finally concatenate all the char. row wise into a new string res and return string res.


Problem)
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows.


class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1){
            return s;
        }
        string str[numRows];
        int row=0;
        bool down=true;
        for(int i=0;i<s.length();i++){
            if(row==0){
                down=true;
            }else if(row==numRows-1){
                down=false;
            }
            if(down==true){
                str[row].push_back(s[i]);
                row++;
            }else if(down==false){
                str[row].push_back(s[i]);
                row--;
            }
        }
        string result="";
        for(int i=0;i<numRows;i++){
            result+=str[i];
        }
        return result;
    }
};